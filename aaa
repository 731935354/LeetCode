class Solution:
    def maximalRectangle(self, matrix):
        """
        :type matrix: List[List[str]]
        :rtype: int
        """
        num_rows = len(matrix)
        num_columns = len(matrix[0])
        
        def search(begin_row, end_row, begin_col, end_col): # 左闭右开
            max_rec, tmp_rec, left_below, right_below, exist_zero = 0, 0, 0, 0, 0
            print("search {}, {}, {}, {}".format(begin_row, end_row, begin_col, end_col))
            for i in range(begin_row, end_row):
                for j in range(begin_col, end_col):
                    if matrix[i][j] == "0":
                        print("{}, {} is zero".format(i, j))
                        exist_zero = 1
                        if i < num_rows - 1: 
                            left_below = search(begin_row+1, end_row, begin_col, j) # 左下区域最大面积
                        if j < num_columns - 1:
                            right_below = search(begin_row+1, end_row, j+1, end_col) # 右下子区域最大面积
                        max_rec = max(left_below, right_below) 
                        break
                    else:
                        tmp_rec += 1
                if exist_zero == 1:
                    break
            max_rec = max(max_rec, tmp_rec)  # 子区域最大面积 vs 当前区域最大面积   
            print("{}, {}, {}, {} get {}".format(begin_row, end_row, begin_col, end_col, max_rec))
            return max_rec
        
        return search(0, num_rows, 0, num_columns)
